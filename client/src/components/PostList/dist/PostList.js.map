{"version":3,"sources":["PostList.tsx"],"names":[],"mappings":"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","file":"PostList.js","sourcesContent":["import React, {FunctionComponent, MouseEvent, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery, useMutation} from '@apollo/client';\r\nimport { QUERY_SINGLE_POST } from '../../utils/queries';\r\nimport { REMOVE_POST  } from '../../utils/mutations';\r\nimport \"./postList.css\";\r\n\r\n\r\nimport Auth from '../../utils/auth';\r\nimport CommentForm from '../CommentForm/CommentForm';\r\nimport CommentList from '../CommentList/CommentList';\r\n\r\ninterface Post  {\r\n  _id: string\r\n  postText: string\r\n  postPic: string\r\n  postAuthor: string\r\n  createdAt: string\r\n}\r\n\r\ntype PostProps = {\r\n  posts: any \r\n}\r\n\r\nconst PostList:FunctionComponent<PostProps> = ( {posts \r\n}) => {\r\n\r\n  const [singlePostId, setSinglePostId] = useState('');  \r\n\r\n  const [removePost, { error }] = useMutation(REMOVE_POST);\r\n\r\n  const { data } =  useQuery( QUERY_SINGLE_POST, {  \r\n      variables: { \r\n        postId: singlePostId,  \r\n      },\r\n    }\r\n  );\r\n\r\n  const singlePost = data?.post || {};\r\n\r\n  const deletePost =  async (event: MouseEvent<HTMLButtonElement>) => {\r\n    console.log(event.currentTarget.id);\r\n\r\n    try {\r\n      const { data } = await removePost({\r\n        variables: {\r\n          postId: event.currentTarget.id,          \r\n        },\r\n      });     \r\n     \r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    window.location.reload();\r\n   };\r\n\r\n  const getPostId = (event: MouseEvent<HTMLButtonElement>) => {\r\n    const { value }: any  = event.target;   ;\r\n    setSinglePostId(value);    \r\n  };\r\n\r\n  const closeComments = (event: MouseEvent<HTMLButtonElement>) => {    \r\n    setSinglePostId(\"\");\r\n    console.log(singlePostId);\r\n  };\r\n\r\n  if (!posts.length) {\r\n    return <h3>No Posts Yet</h3>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"postlist-container\">  \r\n      {posts &&\r\n        posts.map((post: Post ) => (\r\n        <div className=\"post-container\"key={post._id} >\r\n          <h4 className='mail'>          \r\n  \r\n            <Link to={`/profiles/${post.postAuthor}`}>\r\n                  {post.postAuthor}              \r\n            </Link>  \r\n            <p className=\"postdate\">posted on {post.createdAt}</p>          \r\n          </h4>\r\n        {!post.postPic && ( \r\n        <div className=\"post-text-container\">\r\n          <p>{post.postText}</p>\r\n        </div>\r\n        )} \r\n        {post.postPic && (\r\n          <div className=\"post-pic-container\">\r\n            <div className=\"post-pic\">\r\n              <img className=\"post-pic-image\"src={post.postPic} alt='drawing'></img>\r\n            </div>\r\n          </div>\r\n        )}\r\n      \r\n\r\n{Auth.loggedIn() ? (\r\n        <div className=\"post-footer\">       \r\n          <div className=\"post-comment-link\">                \r\n            {post._id === singlePost._id ? (\r\n            <div>           \r\n              <button className=\"comment-close-btn\"type=\"submit\" onClick={closeComments}>Close Comments</button>\r\n              <CommentForm postId={post._id} />\r\n              <CommentList comments={singlePost.comments} />     \r\n            </div>             \r\n            ) : (           \r\n              <button className=\"post-comment-btn\" type=\"submit\" value={post._id} onClick= {getPostId}>Comments</button>\r\n            )}\r\n            \r\n          </div>    \r\n          <div className=\"delete-btn-container\">     \r\n          {Auth.loggedIn() && Auth.getProfile().data.username === post.postAuthor? (\r\n          \r\n          <button id={post._id} className=\"delete-btn\" type=\"submit\" onClick={deletePost}>Delete Post</button>\r\n\r\n          ) : null\r\n        }   \r\n         </div>\r\n        </div>\r\n         ) : null }\r\n      </div>\r\n      ))}\r\n    </div>\r\n);\r\n};\r\n  \r\n  export default PostList;"]}